<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Chat room</title>
    <link rel="stylesheet" href="/css/output.css">
    <link rel="stylesheet" href="../css/room.css">
</head>

<body class="bg-gray-100 min-h-screen">
    <%
        // Grouping reactions by message
        let reactionsByMessage = {};

        reactedEmojis.forEach(function (reaction) {
            let msgId = reaction.message_id;
            if (!reactionsByMessage[msgId]) { reactionsByMessage[msgId] = {}; }
            let emojiId = reaction.emoji_id;
            if (!reactionsByMessage[msgId][emojiId]) {
                reactionsByMessage[msgId][emojiId] = {
                    count: 0,
                    reactedByUser: false,
                    emoji_name: reaction.emoji_name,
                    emoji_image: reaction.emoji_image
                };
            }

            reactionsByMessage[msgId][emojiId].count++;

            if (reaction.reacter_id === userId) {
                reactionsByMessage[msgId][emojiId].reactedByUser = true;
            }
        });

        // unread marker flag
        let insertedUnreadMarker = false;    

    %>

  <div class="container mx-auto p-6">
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
      <h1 class="text-2xl font-bold text-gray-800 mb-4">Room: <%= roomName[0].room_name %></h1>
      <div class="space-x-4">
          <button onclick="location.href='/invite_people/<%= roomId %>'" class="btn">Invite people</button>
          <button onclick="location.href='/members'" class="btn btn-secondary">Go back to room list</button>
      </div>



        <% if (messages && messages.length> 0) { %>
            <% messages.forEach(msg=> {
                // check if the message is sent by the user
                let isSelf = (msg.sender_id && msg.sender_id === userId) ||
                (!msg.sender_id && msg.sender_name === username);
                %>

            <% if (!insertedUnreadMarker && msg.unread==1) { insertedUnreadMarker=true; %>
                <div class="unread-marker">
                    <p>- - - - - - - unread messages- - - - - - -</p>
                </div>
                <% } %>

            <div class="message-container <%= isSelf ? 'right' : 'left' %>">
                <div class="message-wrapper">
                    <div class="sender-name">
                        <%= msg.sender_name %>
                    </div>
                    <div class="message-box <%= isSelf ? 'self' : '' %>">
                        <%= msg.text %>
                    </div>

                    <% // msg.sent_datetime
                    let d = new Date(msg.sent_datetime);
                    let datePart=d.toLocaleDateString('en-US', { month: 'short' , day: 'numeric' , year: 'numeric' });
                    let timePart=d.toLocaleTimeString('en-US', { hour: '2-digit' , minute: '2-digit' , hour12: false });
                    %>

                    <div class="sent-datetime">
                        <%= datePart %> <%= timePart %>
                    </div>

                    <!-- emoji reactions -->
                    <% if (reactionsByMessage[msg.message_id]) { %>
                        <div class="reactions">
                            <% Object.keys(reactionsByMessage[msg.message_id]).forEach(function(emojiId)
                                { let reaction=reactionsByMessage[msg.message_id][emojiId]; %>
                                <span class="reaction">
                                    <img src="/<%= reaction.emoji_image %>"
                                        alt="<%= reaction.emoji_name %>" class="emoji-icon">
                                    <% if (reaction.count> 1) { %>
                                        <span class="reaction-count">
                                            <%= reaction.count %>
                                        </span>
                                        <% } %>
                                            <!-- check reaction by the user -->
                                            <% if (reaction.reactedByUser) { %>
                                                <button class="reaction-btn remove-reaction"
                                                    data-message-id="<%= msg.message_id %>"
                                                    data-emoji-id="<%= emojiId %>">[-]</button>
                                                <% } else { %>
                                                    <button class="reaction-btn add-reaction"
                                                        data-message-id="<%= msg.message_id %>"
                                                        data-emoji-id="<%= emojiId %>">[+]</button>
                                                    <% } %>
                                </span>
                                <% }); %>
                        </div>
                        <% } else { %>
                            <!-- [+] button if no reaction on the message -->
                            <div class="reactions">
                                <button class="reaction-btn add-reaction" data-message-id="<%= msg.message_id %>"
                                    data-emoji-id="">[+reacion]</button>
                            </div>
                            <% } %>

                            
                        <!-- Reaction Candidates: hidden by default -->
                        <div class="reaction-candidates" id="candidates-<%= msg.message_id %>" style="display: none;">
                            <!-- Hardcoded candidate emojis; ideally, these come from your database -->
                            <span class="candidate" data-message-id="<%= msg.message_id %>" data-emoji-id="1">
                                <img src="/thumbsup.png" alt="thumbsup" class="emoji-icon">
                            </span>
                            <span class="candidate" data-message-id="<%= msg.message_id %>" data-emoji-id="2">
                                <img src="/100.png" alt="100percent" class="emoji-icon">
                            </span>
                            <span class="candidate" data-message-id="<%= msg.message_id %>" data-emoji-id="3">
                                <img src="/happy.png" alt="happy" class="emoji-icon">
                            </span>
                        </div>



                </div>
            </div>
            <% }); %>
                <% } else { %>
                    <p class="text-gray-500 text-center py-8">No message in the room.</p>
                    <% } %>


    <!-- form for a new message -->
    <div>
        <form action="/room/<%= roomId %>/send" method="POST" class="space-y-4">
            <textarea name="messageText" placeholder="Type your message here" class="form-input" rows="3" required></textarea>
            <button type="submit" class="btn">Send</button>
        </form>
    </div>
    </div>
  </div>

<!-- Inline Script for Reaction Handling -->
<script>
    // Utility to toggle candidate menu visibility for a given message
    function toggleCandidates(messageId) {
        const candidatesDiv = document.getElementById('candidates-' + messageId);
        if (candidatesDiv.style.display === 'none') {
            candidatesDiv.style.display = 'block';
        } else {
            candidatesDiv.style.display = 'none';
        }
    }

    // Add click event listeners for reaction buttons
    document.querySelectorAll('.reaction-btn').forEach(function (btn) {
        btn.addEventListener('click', function (e) {
            e.preventDefault();
            const messageId = this.getAttribute('data-message-id');
            // If it's an add reaction button, show candidate menu
            if (this.classList.contains('add-reaction')) {
                toggleCandidates(messageId);
                // Send AJAX request to add reaction
                // Replace with your actual endpoint

                // fetch('/reaction/add', {
                //     method: 'POST',
                //     headers: { 'Content-Type': 'application/json' },
                //     body: JSON.stringify({ messageId: messageId, emojiId: this.getAttribute('data-emoji-id') })
                // })
                //     .then(response => response.json())
                //     .then(data => {
                //         if (data.success) {
                //             // Optionally update the UI or reload the page
                //             window.location.reload();
                //         }
                //     })
                //     .catch(err => console.error(err));

            } else if (this.classList.contains('remove-reaction')) {
                // Remove reaction AJAX call
                // Replace with your actual endpoint
                fetch('/reaction/remove', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ messageId: messageId, emojiId: this.getAttribute('data-emoji-id')})
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Optionally, update the UI (e.g., hide candidates, update counts)
                            window.location.reload();
                        }
                    })
                    .catch(err => console.error(err));
            }
        });
    });

    // Add click event listeners for candidate emojis
    document.querySelectorAll('.candidate').forEach(function (candidate) {
        candidate.addEventListener('click', function (e) {
            e.preventDefault();
            const messageId = this.getAttribute('data-message-id');
            const emojiId = this.getAttribute('data-emoji-id');
            // Send AJAX request to add reaction
            // Replace with your actual endpoint
            fetch('/reaction/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ messageId: messageId, emojiId: emojiId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Optionally update the UI or reload the page
                        window.location.reload();
                    }
                })
                .catch(err => console.error(err));
        });
    });

    // Optionally, hide candidate menus when clicking elsewhere
    document.addEventListener('click', function (e) {
        if (!e.target.classList.contains('reaction-btn') && !e.target.classList.contains('candidate') &&
            !e.target.closest('.reaction-candidates')) {
            document.querySelectorAll('.reaction-candidates').forEach(function (div) {
                div.style.display = 'none';
            });
        }
    });
</script>

<script>
    // send a request when the user leaves the room
    window.addEventListener('beforeunload', function (event) {
        const roomId = "<%= roomId %>";
        navigator.sendBeacon(`/room/${roomId}/clear_unread`);
    });
</script>

</body>

</html>